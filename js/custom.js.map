{"version":3,"sources":["node_modules/browser-pack/_prelude.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/addremoveelements/prmFullViewAfter.component.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/addremoveelements/prmRequestServicesAfter.component.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/altmetrics/altmetrics.component.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/announcement/announcement.service.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/announcement/prmTopbarAfter.component.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/chatbox/chatBox.component.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/chatbox/prmExploreMainAfter.component.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/footer/prmExploreFooterAfter.component.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/logo/prmLogoAfter.component.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/main.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/searchtips/prmSearchBarAfter.component.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/searchtips/searchTips.component.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/shared/angularLoadMonkeyPatched.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/shared/locale.service.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/shared/navigation.service.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/shared/scriptLoader.service.js","primo-explore/custom/45KBDK_KGL:KGL_VU1/js/shared/viewName.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_viewName","PrmFullViewAfterController","$element","$scope","_classCallCheck","this","parentElement","parent","retrieveDoiIfPresent","retrieveViafIdsIfPresent","doi","parentCtrl","item","pnx","addata","console","log","viafUris","lad06","altmetricsSectionElement","find","insertSection","scrollId","serviceName","title","authorsSectionElement","sectionData","sectionElement","sectionTitleSelector","waitForTargetThenMoveSection","insertSectionData","_this","unbindWatcher","$watch","querySelector","newVal","oldVal","moveSectionElement","identifierElement","targetElement","children","appendChild","services","splice","$inject","PrmFullViewAfterConfig","name","config","bindings","controller","templateUrl","viewName","PrmRequestServicesAfterController","isLoggedIn","linkElements","querySelectorAll","remove","angular","element","removeClass","addClass","PrmRequestServicesAfterConfig","AltmetricsController","scriptLoaderService","$window","$http","loadBadge","then","onLoad","catch","ctrl","Promise","resolve","reject","get","loadBadgeScript","load","_altmetric","unload","AltmetricsConfig","template","AnnouncementService","$translate","$mdToast","$rootScope","$cookies","_dismissed","$on","_toastPromise","hideCallback","translation","includes","hide","show","hideDelay","position","close","response","put","controllerAs","_dismiss","PrmTopbarAfterController","announcementService","display","displayCallback","nameElements","getElementsByClassName","Array","prototype","forEach","primoExploreCtrl","userSessionManagerService","isGuest","textContent","PrmTopbarAfterConfig","ChatBoxController","localeService","constructChatBoxScriptUrl","loadChatBoxScript","scriptId","en","da","current","scriptUrl","ChatBoxConfig","PrmExploreMainAfterConfig","PrmExploreFooterAfterController","LocaleService","PrmExploreFooterAfterConfig","PrmLogoAfterController","navigationService","iconLink","PrmLogoAfterConfig","_navigation","_scriptLoader","_locale","_prmExploreFooterAfter","_prmLogoAfter","_announcement","_prmTopbarAfter","_prmSearchBarAfter","_searchTips","_prmFullViewAfter","_prmRequestServicesAfter","_altmetrics","_prmExploreMainAfter","_chatBox","run","service","NavigationService","ScriptLoaderService","component","PrmSearchBarAfterConfig","SearchTipsConfig","PrmSearchBarAfterController","append","searchBarElement","focus","SearchTipsController","$mdDialog","event","cancel","document","body","targetEvent","clickOutsideToClose","fullscreen","$document","$q","$timeout","promises","loader","createElement","url","deferred","defer","onload","onreadystatechange","readyState","onerror","promise","loadScript","src","script","loadCSS","href","style","rel","type","head","unloadCSS","docHead","targetCss","$location","search","lang","navigateToHomePage","open","params","vid","split","absUrl","baseUrl","location","angularLoadMonkeyPatched","fileName","fileType","targetAttr","allSuspects","getElementsByTagName","getAttribute","indexOf","parentNode","removeChild"],"mappings":"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","file":"custom.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import {\n  viewName\n} from '../shared/viewName';\n\nclass PrmFullViewAfterController {\n  constructor($element, $scope) {\n    this.$element = $element;\n    this.$scope = $scope;\n  }\n\n  $onInit() {\n    this.parentElement = this.$element.parent()[0];\n\n    this.retrieveDoiIfPresent();\n    this.retrieveViafIdsIfPresent();\n\n  }\n\n  retrieveDoiIfPresent() {\n    try {\n      this.doi = this.parentCtrl.item.pnx.addata.doi[0];\n    } catch (e) {\n      console.log('DOI not found.');\n    };\n  }\n\n  retrieveViafIdsIfPresent() {\n    try {\n      // This does not seem to fail when no VIAF URI is present.\n      this.viafUris = this.parentCtrl.item.pnx.addata.lad06;\n    } catch (e) {\n      console.log('No VIAF URI found.');\n    };\n  }\n\n  insertAltmetricsSection() {\n    let altmetricsSectionData = {\n      scrollId: \"altmetrics\",\n      serviceName: \"altmetrics\",\n      title: \"brief.results.tabs.Altmetrics\"\n    };\n    let altmetricsSectionElement = this.$element.find('rex-altmetrics')[0];\n\n    this.insertSection(altmetricsSectionData, altmetricsSectionElement);\n  }\n\n  insertAuthorsSection() {\n    let authorsSectionData = {\n      scrollId: \"authors\",\n      serviceName: \"authors\",\n      title: \"brief.results.tabs.Authors\"\n    };\n    let authorsSectionElement = this.$element.find('rex-linked-persons')[0];\n\n    this.insertSection(authorsSectionData, authorsSectionElement);\n  }\n\n  insertSection(sectionData, sectionElement) {\n    // The title of the new section is used to idenitfy the section\n    // element.\n    let sectionTitleSelector = 'h4[translate=\"' + sectionData.title + '\"]';\n\n    // We set up the watcher before inserting the section data,\n    // to ensure that the watcher catches the change.\n    this.waitForTargetThenMoveSection(sectionTitleSelector, sectionElement);\n    this.insertSectionData(sectionData);\n  }\n\n  // Wait for the target element to be created.\n  waitForTargetThenMoveSection(sectionTitleSelector, sectionElement) {\n    let unbindWatcher = this.$scope.$watch(() =>\n      this.parentElement.querySelector(sectionTitleSelector),\n      (newVal, oldVal) => {\n        if (newVal) {\n          this.moveSectionElement(newVal, sectionElement);\n          unbindWatcher();\n        }\n      }\n    );\n  }\n\n  moveSectionElement(identifierElement, sectionElement) {\n    let targetElement = identifierElement.parentElement.parentElement.parentElement.parentElement.children[1];\n\n    // Move the section into the target element.\n    if (targetElement && targetElement.appendChild) {\n      targetElement.appendChild(sectionElement);\n      // targetElement.appendChild(this.$element.children()[0]);\n    }\n  }\n\n  insertSectionData(sectionData) {\n    this.parentCtrl.services.splice(this.parentCtrl.services.length - 1, 0, sectionData);\n  }\n\n}\n\nPrmFullViewAfterController.$inject = ['$element', '$scope'];\n\nexport let PrmFullViewAfterConfig = {\n  name: 'prmFullViewAfter',\n  config: {\n    bindings: {\n      parentCtrl: '<',\n    },\n    controller: PrmFullViewAfterController,\n    templateUrl: 'custom/' + viewName + '/html/addremoveelements/prmFullViewAfter.component.html',\n  }\n};","class PrmRequestServicesAfterController {\n\n  constructor($scope, $element) {\n    this.$scope = $scope;\n    this.$element = $element;\n  }\n\n  $onInit() {\n\n    this.parentElement = this.$element.parent();\n\n    // Customize the request link to be a button, and remove the redundant second link.\n    // Do this when the user is logged in, and the links are properly loaded.\n    this.$scope.$watch(() => this.parentCtrl.isLoggedIn() && this.parentElement[0].querySelector('.links-block-item prm-service-button button'),\n      (newVal, oldVal) => {\n        if (newVal && !oldVal) {\n          // Find the links.\n          let linkElements = this.parentElement[0].querySelectorAll('.links-block-item');\n\n          // It seems that there should always be two matched links,\n          // if not, log it but do not throw an exception\n          // as the code might still do the job.\n          if (linkElements.length != 2) {\n            console.log('An unhandled case is encountered in prm-request-services.');\n          }\n\n          // If the first link is the ILL link, \n          // we remove prm-request-services element all together.\n          if (linkElements[0].querySelector('span[translate=\"ILL\"]')) {\n            this.parentElement.remove();\n          }\n          // Else, the first one should be the request link \n          // and the second the ILL link.\n          else {\n            // Customize the request link to be a button.\n            angular.element(linkElements[0]).find('button').removeClass('button-as-link');\n            angular.element(linkElements[0]).find('button').addClass('request-button');\n\n            // Remove the redundant ILL link.\n            linkElements[1].remove();\n          }\n        }\n      }\n    );\n\n  }\n\n}\n\nPrmRequestServicesAfterController.$inject = ['$scope', '$element'];\n\nexport let PrmRequestServicesAfterConfig = {\n  name: 'prmRequestServicesAfter',\n  config: {\n    bindings: {\n      parentCtrl: '<',\n    },\n    controller: PrmRequestServicesAfterController\n  }\n}","/**\n * The altmetrics component controller.\n */\nclass AltmetricsController {\n\n  constructor(scriptLoaderService, $window, $http) {\n    this.scriptLoaderService = scriptLoaderService;\n    this.$window = $window;\n    this.$http = $http;\n  }\n\n  $onInit() {\n    return this.loadBadge().then(this.onLoad).catch((e) => console.log(e));\n  }\n\n  /**\n   *  Method to load the altmetrics badge.\n   *  @return {Promise} A Promise to be fulfilled if the badge is loaded, \n   *  and to be rejected if it could not be loaded.\n   */\n  loadBadge() {\n    let ctrl = this;\n    return new Promise((resolve, reject) => {\n      if (ctrl.doi) {\n        ctrl.$http.get('https://api.altmetric.com/v1/doi/' + ctrl.doi).then(() => {\n          try {\n            ctrl.loadBadgeScript();\n          } catch (e) {\n            console.log(e);\n            reject('Altmetrics onLoad error.');\n            return;\n          }\n          resolve();\n        }).catch((e) =>\n          reject('REX: Altmetrics badge cannot be loaded.')\n        );\n      } else {\n        reject('REX: Altmetrics badge cannot be loaded as no DOI is present.');\n      }\n    });\n  };\n\n  loadBadgeScript() {\n    return this.scriptLoaderService.load('https://d1bxh8uas1mnw7.cloudfront.net/assets/embed.js');\n  };\n\n  $onDestroy() {\n    if (this.$window._altmetric) {\n      delete this.$window._altmetric;\n    }\n\n    // TODO: Remove any other JS or CSS files that are loaded. The URLs below may change!\n    this.scriptLoaderService.unload('https://d1bxh8uas1mnw7.cloudfront.net/assets/embed.js', 'js');\n    this.scriptLoaderService.unload('https://d1bxh8uas1mnw7.cloudfront.net/assets/altmetric_badges-8f271adb184c21cc5169a7f67f7fe5ab.js', 'js');\n    this.scriptLoaderService.unload('https://d1bxh8uas1mnw7.cloudfront.net/assets/embed-2c47105b6381604898bbf8ae8a680350.css', 'css');\n\n    console.log('REX: Altmetrics badge is destroyed!.');\n  };\n};\n\nAltmetricsController.$inject = ['scriptLoaderService', '$window', '$http'];\n\nexport let AltmetricsConfig = {\n  name: 'rexAltmetrics',\n  config: {\n    // template: '<div ng-if=\"$ctrl.doi\" data-badge-type=\"donut\" class=\"altmetric-embed\" data-badge-popover=\"left\" data-doi=\"{{$ctrl.doi}}\"></div>',\n    template: '<div ng-if=\"$ctrl.doi\" class=\"altmetric-embed\" data-badge-type=\"medium-donut\" data-badge-details=\"right\" data-doi=\"{{$ctrl.doi}}\"></div>',\n    bindings: {\n      doi: '<',\n      onLoad: '&',\n    },\n    controller: AltmetricsController,\n  }\n}","import {\n  viewName\n} from '../shared/viewName';\n\n/**\n * Annoncement service.\n * Displays a md-toast on top of the view, containing an announcement retrieved from the code tables.\n */\nexport class AnnouncementService {\n  constructor($translate, $mdToast, $rootScope, $cookies) {\n    this.$translate = $translate;\n    this.$mdToast = $mdToast;\n    this.$rootScope = $rootScope;\n    this.$cookies = $cookies;\n\n    this._dismissed = false;\n\n    // Forget the dismissal if the language is changed.\n    this.$rootScope.$on('$translateChangeSuccess', () => {\n      this._dismissed = false;\n    });\n  };\n\n  // The announcement has been dismissed.\n  _dismiss() {\n    this._dismissed = true;\n    this._toastPromise = null;\n  };\n\n  /** \n   *  Displays the announcement if it has not been dismissed.\n   *  @param {function} [hideCallback] - A function to be called \n   *    when the announcement is hidden.\n   *  @return {Promise} A Promise to be fulfilled \n   *    if the announcement is displayed, and to be \n   *    rejected when the announcement cannot be displayed.\n   */\n  display(hideCallback) {\n    let ctrl = this;\n\n    return new Promise((resolve, reject) => {\n\n      if (ctrl._dismissed === true) {\n        reject('The announcement has been dismissed.');\n        return;\n      }\n\n      ctrl.$translate('nui.message.announcement').then((translation) => {\n        // Check if there is a cookie with this message\n        let cookie = ctrl.$cookies.get('announcement');\n        if (cookie === translation){\n          reject('The announcement has been dismissed before.');\n          return;\n        }\n        // If there is no announcement to be displayed.\n        if ((!translation) || ['announcement', '&nbsp;', ''].includes(translation)) {\n          // translation is assigned 'announcement' in the absence of a matching entry.\n\n          // If there is already a toast, and no \n          // announcement, hide the toast.\n          // This happens when the language is changed.\n          if (ctrl._toastPromise && !ctrl._dismissed) {\n            ctrl.$mdToast.hide();\n          }\n          reject('No announcement found.');\n          return;\n        }\n\n        // If there is already a toast promise,\n        // avoid creating a new one.\n        ctrl._toastPromise = ctrl._toastPromise || ctrl.$mdToast.show({\n          // Timeout duration in msecs. false implies no timeout.\n          hideDelay: false,\n          position: 'top',\n          controller: () => {\n            return {\n              close: () => {\n                ctrl.$mdToast.hide();\n                // Save as cookie\n                ctrl.$translate('nui.message.announcement').then((response) => {\n                  return ctrl.$cookies.put('announcement', response);\n                });\n              }\n            }\n          },\n          controllerAs: '$ctrl',\n          templateUrl: 'custom/' + viewName + '/html/announcement/announcement.html',\n        });\n\n        ctrl._toastPromise.then(hideCallback).catch(hideCallback).then(() => ctrl._dismiss());\n\n        resolve();\n\n      });\n\n    });\n  };\n\n};\n\nAnnouncementService.$inject = ['$translate', '$mdToast', '$rootScope', '$cookies'];","class PrmTopbarAfterController {\n  constructor(announcementService, $scope, $element, $translate) {\n    this.announcementService = announcementService;\n    this.$scope = $scope;\n    this.$element = $element;\n    this.$translate = $translate;\n  }\n\n  $onInit() {\n    // Announcement displayed.\n    this.announcementService.display(() => this.hideCallback())\n      .then(() => this.displayCallback())\n      .catch((e) => {\n        if (e) console.log(e);\n      });\n\n    let nameElements = this.$element.parent()[0].getElementsByClassName('user-name');\n\n    // Replace the 'Guest' label with 'Log in' to cue the user where to login.\n    // TODO: Test this on each new release to see if it is still needed,\n    // and remove otherwise.\n    this.$scope.$watch(nameElements.length, (newVal, oldVal) => {\n      Array.prototype.forEach.call(nameElements, (element) => {\n        if (this.primoExploreCtrl.userSessionManagerService.isGuest()) {\n          this.$translate('eshelf.signin.title').then((translation) => {\n            element.textContent = translation;\n          });\n        };\n      });\n    });\n\n  };\n\n  displayCallback() {\n    this.$element.parent().addClass('shifted-topbar');\n  };\n\n  hideCallback() {\n    this.$element.parent().removeClass('shifted-topbar');\n  };\n\n}\n\nPrmTopbarAfterController.$inject = ['announcementService', '$scope', '$element', '$translate'];\n\nexport let PrmTopbarAfterConfig = {\n  name: 'prmTopbarAfter',\n  config: {\n    controller: PrmTopbarAfterController,\n    require: {\n      primoExploreCtrl: '^primoExplore'\n    }\n  }\n};","import {\n  viewName\n} from '../shared/viewName';\n\nclass ChatBoxController {\n  constructor($scope, scriptLoaderService, localeService) {\n    this.$scope = $scope;\n    this.scriptLoaderService = scriptLoaderService;\n    this.localeService = localeService;\n  }\n\n  $onInit() {\n    this.constructChatBoxScriptUrl();\n    return this.loadChatBoxScript()\n      .then(() => {\n        console.log('Chat box loaded!');\n      })\n      .catch(() => {\n        throw new Error('Chat box could not be loaded!');\n      });\n  }\n\n  constructChatBoxScriptUrl() {\n    let scriptUrlBase = 'https://region-eu.libanswers.com/load_chat.php?hash=';\n    let scriptIds = {\n      'en': '2065a8d15fb45f3c911c2b223cc81286',\n      'da': '7df867c6243394f970f8550332c4b607'\n    };\n    this.scriptId = scriptIds[this.localeService.current()];\n    this.scriptUrl = scriptUrlBase + this.scriptId;\n  }\n\n  loadChatBoxScript() {\n    return this.scriptLoaderService.load(this.scriptUrl);\n  }\n\n  $onDestroy() {\n    this.scriptLoaderService.unload(this.scriptUrl, 'js');\n    console.log('Chat box destroyed!');\n  }\n\n}\n\nChatBoxController.$inject = ['$scope', 'scriptLoaderService', 'localeService'];\n\nexport let ChatBoxConfig = {\n  name: 'rexChatBox',\n  config: {\n    controller: ChatBoxController,\n    templateUrl: 'custom/' + viewName + '/html/chatbox/chatBox.component.html',\n  }\n}","import { viewName } from '../shared/viewName';\n\nexport let PrmExploreMainAfterConfig = {\n  name: 'prmExploreMainAfter',\n  config: {\n    templateUrl: 'custom/' + viewName + '/html/chatbox/prmExploreMainAfter.component.html',\n  }\n};","import {viewName} from '../shared/viewName';\nimport {LocaleService} from \"../shared/locale.service\";\n\nclass PrmExploreFooterAfterController {\n    constructor(localeService) {\n        this.localeService = localeService;\n    }\n\n     locale(){\n        return this.LocaleService.current();\n     }\n}\n\nPrmExploreFooterAfterController.$inject = ['localeService'];\n\nexport let PrmExploreFooterAfterConfig = {\n    name: 'prmExploreFooterAfter',\n    config: {\n        bindings: {parentCtrl: '<'},\n        controller: PrmExploreFooterAfterController,\n        templateUrl: 'custom/' + viewName + '/html/footer/footer' + '.html',\n    }\n}\n","import { viewName } from '../shared/viewName';\r\n\r\n// Clickable logo.\r\nclass PrmLogoAfterController {\r\n\r\n  constructor(navigationService) {\r\n    this.navigationService = navigationService;\r\n  }\r\n\r\n  getIconLink() {\r\n    return this.parentCtrl.iconLink;\r\n  };\r\n\r\n}\r\n\r\nPrmLogoAfterController.$inject = ['navigationService'];\r\n\r\nexport let PrmLogoAfterConfig = {\r\n  name: 'prmTopBarBefore',\r\n  config: {\r\n    bindings: {\r\n      parentCtrl: '<'\r\n    },\r\n    controller: PrmLogoAfterController,\r\n    templateUrl: 'custom/' + viewName + '/html/logo/prmLogoAfter.component.html'\r\n  }\r\n};","// Shared\nimport { viewName } from './shared/viewName';\nimport { NavigationService } from './shared/navigation.service';\nimport { ScriptLoaderService } from './shared/scriptLoader.service';\nimport { LocaleService } from './shared/locale.service';\n\n// Googleanalytics\n// import { GoogleAnalyticsService } from './googleanalytics/googleAnalytics.service';\n\n// Footer\nimport { PrmExploreFooterAfterConfig } from './footer/prmExploreFooterAfter.component';\n\n// Logo\nimport { PrmLogoAfterConfig } from './logo/prmLogoAfter.component';\n\n// Announcement\nimport { AnnouncementService } from './announcement/announcement.service';\nimport { PrmTopbarAfterConfig } from './announcement/prmTopbarAfter.component';\n\n// Pickupnumbers\n// import { PickUpNumbersService } from './pickupnumbers/pickUpNumbers.service';\n// import { PrmRequestsAfterConfig } from './pickupnumbers/prmRequestsAfter.component';\n// import { PrmRequestsOverviewAfterConfig } from './pickupnumbers/prmRequestsOverviewAfter.component';\n\n// Linkedperson\n// import { LinkedPersonsService } from './linkedperson/linkedPersons.service';\n// import { LinkedPersonsConfig } from './linkedperson/linkedPersons.component';\n\n// Openinghours\n// import { OpeningHoursConfig } from './openinghours/openingHours.component';\n\n// Searchtips\nimport { PrmSearchBarAfterConfig } from './searchtips/prmSearchBarAfter.component';\nimport { SearchTipsConfig } from './searchtips/searchTips.component';\n\n// Add / remove elements\nimport { PrmFullViewAfterConfig } from './addremoveelements/prmFullViewAfter.component';\nimport { PrmRequestServicesAfterConfig } from './addremoveelements/prmRequestServicesAfter.component';\n\n// Altmetrics\nimport { AltmetricsConfig } from './altmetrics/altmetrics.component';\n\n// Chatbox\nimport { PrmExploreMainAfterConfig } from './chatbox/prmExploreMainAfter.component';\nimport { ChatBoxConfig } from './chatbox/chatBox.component';\n\n// Fines\n// import { PrmFinesAfterConfig } from './fines/prmFinesAfter.component';\n\n// Personalinfo\n// import { PrmPersonalInfoAfterConfig } from './personalinfo/prmPersonalInfoAfter.component';\n\n\n\n\nangular.module('viewCustom', [\n  'angularLoadMonkeyPatched',\n  'ngMaterial'\n])\n    .run(['$rootScope', ($rootScope) => {\n      $rootScope.viewName = viewName;\n    }]);\n// Googleanalytics\n// .run(['googleAnalyticsService', (googleAnalyticsService) => {\n//   let trackingId =  'UA-77177865-1';\n//   googleAnalyticsService.initialize(trackingId)\n//   .then(() => googleAnalyticsService.trackPageViews())\n//   .catch((e) => {\n//     console.log('Google anayltics could not be initialized.');\n//     console.log(e);\n//   });\n// }]);\n\n\nangular.module('viewCustom')\n\n// Shared\n    .service('navigationService', NavigationService)\n    .service('scriptLoaderService', ScriptLoaderService)\n    .service('localeService', LocaleService)\n\n    // Googleanalytics\n    //   .service('googleAnalyticsService', GoogleAnalyticsService)\n\n    // Footer\n    .component(PrmExploreFooterAfterConfig.name, PrmExploreFooterAfterConfig.config)\n\n    //Logo\n    .component(PrmLogoAfterConfig.name, PrmLogoAfterConfig.config)\n    // Announcement\n      .service('announcementService', AnnouncementService)\n      .component(PrmTopbarAfterConfig.name, PrmTopbarAfterConfig.config)\n\n    // Pickupnumbers\n    //   .service('pickUpNumbersService', PickUpNumbersService)\n    //   .component(PrmRequestsAfterConfig.name, PrmRequestsAfterConfig.config)\n    //   .component(PrmRequestsOverviewAfterConfig.name, PrmRequestsOverviewAfterConfig.config)\n\n    // Linkedperson\n    //   .service('linkedPersonsService', LinkedPersonsService)\n    //   .component(LinkedPersonsConfig.name, LinkedPersonsConfig.config)\n\n    // Openinghours\n    //   .component(OpeningHoursConfig.name, OpeningHoursConfig.config)\n\n    // Searchtips\n    .component(PrmSearchBarAfterConfig.name, PrmSearchBarAfterConfig.config)\n    .component(SearchTipsConfig.name, SearchTipsConfig.config)\n\n    // Add / remove elements\n    .component(PrmFullViewAfterConfig.name, PrmFullViewAfterConfig.config)\n    .component(PrmRequestServicesAfterConfig.name, PrmRequestServicesAfterConfig.config)\n\n    // Altmetrics\n    .component(AltmetricsConfig.name, AltmetricsConfig.config)\n\n    // Chatbox\n      .component(PrmExploreMainAfterConfig.name, PrmExploreMainAfterConfig.config)\n      .component(ChatBoxConfig.name, ChatBoxConfig.config)\n\n    // Fines\n    //   .component(PrmFinesAfterConfig.name, PrmFinesAfterConfig.config)\n\n    // Personalinfo\n    // .component(PrmPersonalInfoAfterConfig.name, PrmPersonalInfoAfterConfig.config)\n\n\n\n\n// Pre-ES2015 code.\nrequire('./shared/angularLoadMonkeyPatched');","import { viewName } from '../shared/viewName';\n\nclass PrmSearchBarAfterController {\n  constructor($element) {\n    this.$element = $element;\n  };\n\n  $postLink() {\n\n    let parentElement = this.$element.parent();\n\n    // Move the search tips.\n    let container = angular.element(parentElement.children()[0].children[0]);\n    container.append(this.$element.children()[0]);\n\n    let searchBarElement = parentElement[0].querySelector('#searchBar');\n    \n    // Focus on the search bar, if it exists.\n    // Note that, when the language is changed, \n    // the search bar is not available yet here.\n    // We can watch for the element and then focus on it,\n    // but it does not seem to worth it.\n    if (searchBarElement) {\n      searchBarElement.focus();\n    }\n\n  };\n}\n\nPrmSearchBarAfterController.$inject = ['$element'];\n\nexport let PrmSearchBarAfterConfig = {\n  name: 'prmSearchBarAfter',\n  config: {\n    templateUrl: 'custom/' + viewName + '/html/searchtips/prmSearchBarAfter.component.html',\n    controller: PrmSearchBarAfterController,\n  }\n}","import { viewName } from '../shared/viewName';\n\nclass SearchTipsController {\n  constructor($mdDialog, localeService) {\n    this.$mdDialog = $mdDialog;\n    this.localeService = localeService;\n  };\n\n  /**\n   * Pops up a dialog message containing \n   * the search tips in the selected language.\n   */\n  showSearchTips(event) {\n    this.$mdDialog.show({\n      controller: () => {\n        return {\n          hide: () => { this.$mdDialog.hide() },\n          cancel: () => { this.$mdDialog.cancel() },\n        }\n      },\n      controllerAs: '$ctrl',\n      templateUrl: 'custom/' + viewName + '/html/searchtips/searchTips_' + this.localeService.current() + '.html',\n      parent: angular.element(document.body),\n      targetEvent: event,\n      clickOutsideToClose: true,\n      fullscreen: false // Only for -xs, -sm breakpoints.\n    });\n  };\n\n}\n\nSearchTipsController.$inject = ['$mdDialog', 'localeService'];\n\nexport let SearchTipsConfig = {\n  name: 'rexSearchTips',\n  config: {\n    controller: SearchTipsController,\n    templateUrl: 'custom/' + viewName + '/html/searchtips/searchTips.component.html'\n  }\n}","/** \n* This is a monkey patched version of the AngularLoad service, that can reload scripts.\n*/\n\n\n/* angular-load.js / v0.4.1 / (c) 2014, 2015, 2016 Uri Shaked / MIT Licence */\n\n(function () {\n  'use strict';\n\n  angular.module('angularLoadMonkeyPatched', [])\n    .service('angularLoadMonkeyPatched', ['$document', '$q', '$timeout', function ($document, $q, $timeout) {\n      var document = $document[0];\n      var promises = {};\n\n      function loader(createElement) {\n        return function(url) {\n        // This check prevents us from reloading scripts.\n        // if (typeof promises[url] === 'undefined') {\n        if (true) {\n            var deferred = $q.defer();\n            var element = createElement(url);\n\n            element.onload = element.onreadystatechange = function (e) {\n              if (element.readyState && element.readyState !== 'complete' && element.readyState !== 'loaded') {\n                return;\n              }\n\n              $timeout(function () {\n                deferred.resolve(e);\n              });\n            };\n            element.onerror = function (e) {\n              $timeout(function () {\n                deferred.reject(e);\n              });\n            };\n\n            promises[url] = deferred.promise;\n          }\n\n          return promises[url];\n        };\n      }\n\n      /**\n       * Dynamically loads the given script\n       * @param src The url of the script to load dynamically\n       * @returns {*} Promise that will be resolved once the script has been loaded.\n       */\n      this.loadScript = loader(function (src) {\n        var script = document.createElement('script');\n\n        script.src = src;\n\n        document.body.appendChild(script);\n        return script;\n      });\n\n      /**\n       * Dynamically loads the given CSS file\n       * @param href The url of the CSS to load dynamically\n       * @returns {*} Promise that will be resolved once the CSS file has been loaded.\n       */\n      this.loadCSS = loader(function (href) {\n        var style = document.createElement('link');\n\n        style.rel = 'stylesheet';\n        style.type = 'text/css';\n        style.href = href;\n\n        document.head.appendChild(style);\n        return style;\n      });\n\n      /**\n       * Dynamically unloads the given CSS file\n       * @param href The url of the CSS to unload dynamically\n       * @returns boolean that will be true once the CSS file has been unloaded successfully or otherwise false.\n       */\n      this.unloadCSS = function (href) {\n        delete promises[href];\n        var docHead = document.head;\n        if(docHead) {\n          var targetCss = docHead.querySelector('[href=\"' + href + '\"]');\n          if(targetCss) {\n            targetCss.remove();\n            return true;\n          }\n        }\n        return false;\n      };\n\n    }]);\n})();","export class LocaleService {\n  constructor($location) {\n    this.$location = $location;\n  }\n\n  current() {\n    console.log(this.$location.search().lang);\n    return this.$location.search().lang;\n  }\n}\n\nLocaleService.$inject = ['$location'];","import { viewName } from './viewName';\n\n/**\n * A service handling navigation logic. \n */\nexport class NavigationService {\n  \n  constructor($location, $window) {\n    this.$location = $location;\n    this.$window = $window;\n  }\n\n  /**\n   * Opens the given url in a new tab, \n   * or navigates to the home page if the url is blank.\n   * @param {string} url- The URL to be navigated to.\n   */\n  navigateTo(url) {\n    if (typeof url === 'undefined' || url === \"\")\n      this.navigateToHomePage();\n    else\n      this.$window.open(url, '_blank');\n  };\n\n  /**\n   * Navigates to the home page with a reload.\n   * @return {boolean} Booelan value indicating if the navigation was successful.\n   */\n  navigateToHomePage() {\n    let params = this.$location.search();\n    let vid = params.vid || viewName;\n    let lang = params.lang || \"da\";\n    let split = this.$location.absUrl().split('/discovery/');\n\n    if (split.length === 1) {\n      console.log('Could not process the URL : ' + split[0]);\n      return false;\n    }\n\n    let baseUrl = split[0];\n    this.$window.location.href = baseUrl + '/discovery/search?vid=' + vid + '&lang=' + lang;\n    return true;\n  };\n\n}\n\nNavigationService.$inject = ['$location', '$window'];","/**\n * A service to load and unload JS scripts.\n */\nexport class ScriptLoaderService {\n  constructor(angularLoadMonkeyPatched) {\n    this.angularLoadMonkeyPatched = angularLoadMonkeyPatched;\n  }\n\n  /**\n   * Loads the JS script with given URL.\n   * @param {string} url - The URL of the script to be loaded.\n   */\n  load(url) { \n    return this.angularLoadMonkeyPatched.loadScript(url);\n  }\n\n  /**\n   * Removes the JS or CSS file with the given file name from the DOM. \n   * See: http://stackoverflow.com/questions/9425910/load-and-unload-javascript-at-runtime/9425964#9425964\n   * @param {string} fileName- The name of the file to be removed.\n   * @param {string} fileType- The type of the file to be removed.\n   */\n  unload(fileName, fileType) {\n    // Determine element type to create nodelist from\n    var targetElement = (fileType == \"js\") ? \"script\" : (fileType == \"css\") ? \"link\" : \"none\"\n      // Determine corresponding attribute to test for\n    var targetAttr = (fileType == \"js\") ? \"src\" : (fileType == \"css\") ? \"href\" : \"none\"\n    var allSuspects = document.getElementsByTagName(targetElement)\n      // Search backwards within nodelist for matching elements to remove\n    for (var i = allSuspects.length; i >= 0; i--) {\n      if (allSuspects[i] && allSuspects[i].getAttribute(targetAttr) != null && allSuspects[i].getAttribute(targetAttr).indexOf(fileName) != -1)\n      // Remove element by calling parentNode.removeChild()\n        allSuspects[i].parentNode.removeChild(allSuspects[i])\n    }\n  }\n\n}\n\nScriptLoaderService.$inject = ['angularLoadMonkeyPatched'];","// Define the view name here.\nexport let viewName = \"45KBDK_KGL:KGL_VU1\";"],"sourceRoot":"/source/"}